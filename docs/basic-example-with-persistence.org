* Basic Example with Persistence

In this example only the bare minimum is used and documents added are **persisted**.

#+BEGIN_SRC lisp
  ```common_lisp
  ;;Setup to use cl-naive-store
  (require 'cl-naive-store)
  (defpackage :naive-examples (:use :cl :cl-getx :cl-naive-store))
  (in-package :naive-examples)

  ;;Create a universe
  (defparameter *universe* (make-instance
			    'universe
			    :location "~/data-universe/" ;Setting the location on disk.
			    :store-class 'store))

  (let* (;;Create a store and add it to the universe
	 (store (add-store *universe*
			   (make-instance 'store
					  :name "simple-store"
					  ;;Specifying the key field, else its :key
					  :keys '(:id)
					  :collection-class 'collection)))

	 ;;Create a collection and add it to the store
	 (collection
	   (add-collection store
			   (make-instance 'collection
					  :name "simple-collection"))))

    ;;Add some documents to the collection
    (persist-document collection (list :name "Piet" :surname "Gieter" :id 123))
    (persist-document collection (list :name "Sannie" :surname "Gieter" :id 321))
    (persist-document collection (list :name "Koos" :surname "Van" :id 999))

    ;;Clear the collection, ie unload documents from memory so we can show that it has been persisted.
    (setf (documents collection) nil)

    ;;Query the collection, query-data will load the data from file if the collection is empty
    (query-data collection :query (lambda (document)
				    (<= (getx document :id) 900))))

  ```
#+END_SRC

Output:

#+BEGIN_SRC lisp
  ```common_lisp
  ((:NAME "Piet" :SURNAME "Gieter" :ID 123)
   (:NAME "Sannie" :SURNAME "Gieter" :ID 321))

  ```
#+END_SRC

To see the file created for the data go to ~/data-universe/simple-store/simple-collection/ there you should find a simple-collection.log file and you should see the following in the file

#+BEGIN_SRC lisp
  ```common_lisp
  (:NAME "Piet" :SURNAME "Gieter" :ID 123)
  (:NAME "Sannie" :SURNAME "Gieter" :ID 321)
  ```
#+END_SRC

** Lazy Loading:

In this example query-data loaded the data into the collection and then only ran the query against the data. This is a type of lazy loading where we delay loading the data into memory to the last moment. In this example it does not make a lot of sense because persist-document already loads the documents into the collection and memory, but when you have already persisted data this could help in keeping a smaller foot print in memory.

You can explicitly load the collection yourself by using (load-data collection).

[[file:home.org][Home]] [[file:basic-example.org][Previous]] [[file:indexed-example.org][Next]]
